<?php

/**
 * @file
 * File description.
 *
 * Long description.
 */

use Drupal\migrate_tools\MigrateBatchExecutable;
use Drupal\migrate\MigrateMessage;
use Drupal\Core\Form\FormStateInterface;
use Drupal\user\Entity\User;
use Drupal\stanford_events_importer\StanfordEventsImporter;

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Alter the config form to add the migrate_tools UI.
 */
function stanford_events_importer_form_config_pages_stanford_events_importer_form_alter(array &$form, FormStateInterface $form_state) {
  $user = User::load(\Drupal::currentUser()->id());
  $form['actions']['#type'] = 'fieldset';

  $form['actions']['import'] = [
    '#type' => 'submit',
    '#value' => t('Save & Import'),
    '#name' => 'op',
    '#button_type' => "primary",
    '#submit' => [
      "::submitForm",
      "::save",
      "stanford_events_importer_form_config_pages_stanford_events_importer_form_alter_submit",
    ]
  ];

  $form['actions']['update_opts'] = [
    '#type' => 'submit',
    '#value' => t('Update Org & Category Options'),
    '#name' => 'op',
    '#submit' => [ "stanford_events_importer_update_opts" ],
    '#access' => $user->hasPermission("administer migrations"),
  ];

  return $form;
}

/**
 * Submit handler for the config form override.
 *
 * @param $form
 * @param $form_state
 */
function stanford_events_importer_form_config_pages_stanford_events_importer_form_alter_submit($form, &$form_state) {

  // Reset all static caches as something is getting stuck.
  drupal_static_reset();

  // Clear all plugin caches.
  \Drupal::service('plugin.cache_clearer')
    ->clearCachedDefinitions();

  $migrations = stanford_migrate_migration_list();
  $migration_plugin = $migrations["stanford_events"]["stanford_events_importer"] ?? FALSE;

  if (!$migration_plugin) {
    \Drupal::messenger()->addError('Could not find the stanford_events_importer migration!');
    return;
  }

  $migrateMessage = new MigrateMessage();
  $options = [
    'update' => TRUE,
    'force' => TRUE,
  ];

  try {
    $executable = new MigrateBatchExecutable($migration_plugin, $migrateMessage, $options);
    $executable->batchImport();

  }
  catch(Exception $e) {
    \Drupal::messenger()->addError('Could not run importer!');
  }

}

/**
 * Fetch and save to state the org & category data.
 */
function stanford_events_importer_update_opts() {

  $client = \Drupal::httpClient();
  $importer = new StanfordEventsImporter($client);

  // Categories.
  // ---------------------------------------------------------------------------
  $cat_xml_raw = $importer->fetchXML('category-list');

  $args = [
    'guids' => '/CategoryList/Category/guid',
    'label' => '/CategoryList/Category/name',
  ];

  // Get the formatted key->value pairs.
  $key_val = $importer->parseXML($cat_xml_raw, $args);

  // Set the state storage for this site.
  \Drupal::state()->set(StanfordEventsImporter::STATE_KEY_CAT, $key_val);


  // Organizations.
  // ---------------------------------------------------------------------------
  $org_xml_raw = $importer->fetchXML('organization-list');

  $args = [
    'guids' => '/OrganizationList/Organization/guid',
    'label' => '/OrganizationList/Organization/name',
  ];

  // Get the formatted key->value pairs.
  $key_val = $importer->parseXML($org_xml_raw, $args);

  // Set the state storage for this site.
  \Drupal::state()->set(StanfordEventsImporter::STATE_KEY_ORG, $key_val);

  \Drupal::messenger()->addStatus('Updated category and organization information.');
}

